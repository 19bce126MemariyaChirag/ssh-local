pipeline {
agent none
    environment {
        HOME = '/tmp'
        APP_NAME = "dotnet-comparison-same-app"
        APP_PORT = "5000"
        IMAGE_TAG = "1.0"
        DOCKER_REGISTRY="memariyachirag126"
        DOCKER_USERNAME="memariyachirag126"
        DOCKER_PASSWORD="dckr_pat_u0F_btR1cPtN1Z6gIa2ewM7ptY4"
        }
    stages {
        stage('Build') {
            agent {
                docker { image 'mcr.microsoft.com/dotnet/sdk:6.0' }
            }
            steps {
                // Build the project
                sh 'dotnet build'
            }
        }

        stage('test') {
            agent {
                docker { image 'mcr.microsoft.com/dotnet/sdk:6.0' }
            }
            steps {
                // test the project
                sh 'dotnet test'
            }
        }

        stage('pulbish'){
            agent {
                docker { image 'mcr.microsoft.com/dotnet/sdk:6.0' }
            }
            steps{
                // Publish the project
                sh 'dotnet publish -c Release -o ./publish'
            }
        }

        stage('Build docker image') {
            agent any
            steps {  
                sh 'docker build -t ${DOCKER_REGISTRY}/${APP_NAME}:${IMAGE_TAG} .'
            }
        }
        stage('Docker Login and Push') {
            agent any
            steps {
                // Log in to Docker registry
                withCredentials([usernamePassword(credentialsId: 'dockerhub-token', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
                    sh "docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}"
                    sh "docker push ${DOCKER_REGISTRY}/${APP_NAME}:${IMAGE_TAG}"
                }
            }
        }
    }
}
